!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD_ELEMENTS	/home/avinash/mywork/cstl/test/t_c_array.c	35;"	d	file:
ADD_ELEMENTS1	/home/avinash/mywork/cstl/test/t_c_array.c	42;"	d	file:
ADD_ELEMENTS2	/home/avinash/mywork/cstl/test/t_c_array.c	49;"	d	file:
ADD_ONE_ELEMENT	/home/avinash/mywork/cstl/test/t_c_array.c	57;"	d	file:
ARRAY_PTR	/home/avinash/mywork/cstl/inc/c_array.h	/^typedef c_array* ARRAY_PTR;$/;"	t
AVLtree	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^}AVLtree;$/;"	t	typeref:struct:avltree
AVLtreeNode	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^}AVLtreeNode;$/;"	t	typeref:struct:avltreeNode
BLACK	/home/avinash/mywork/cstl/inc/c_util.h	11;"	d
BLACK	/home/avinash/mywork/cstl/test/t_c_rb.c	7;"	d	file:
BSTInorder	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int BSTInorder(BSTtree *tree)$/;"	f
BSTInsert	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int BSTInsert(BSTtree *tree, BSTtreeNode *newNode, f_comparator comparator)$/;"	f
BST_INORDER	/home/avinash/mywork/cstl/inc/c_bst.h	27;"	d
BST_NODE_NULL	/home/avinash/mywork/cstl/inc/c_bst.h	13;"	d
BST_NODE_PTR	/home/avinash/mywork/cstl/inc/c_bst.h	/^typedef c_bst_node* BST_NODE_PTR;$/;"	t
BST_POSTORDER	/home/avinash/mywork/cstl/inc/c_bst.h	29;"	d
BST_PREORDER	/home/avinash/mywork/cstl/inc/c_bst.h	28;"	d
BST_PTR	/home/avinash/mywork/cstl/inc/c_bst.h	/^typedef c_bst* BST_PTR;$/;"	t
BSTtree	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^}BSTtree;$/;"	t	typeref:struct:bsttree
BSTtreeFind	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode *BSTtreeFind(BSTtree *tree, void *key)$/;"	f
BSTtreeInsert	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int BSTtreeInsert(BSTtree *tree, void *key, void *data)$/;"	f
BSTtreeNode	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^}BSTtreeNode;$/;"	t	typeref:struct:bsttreeNode
BSTtreeRemove	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int BSTtreeRemove(BSTtree *tree, void *key)$/;"	f
CC	/home/avinash/mywork/cstl/src/Makefile	/^CC              :=  gcc -g -Wall$/;"	m
CC	/home/avinash/mywork/cstl/test/Makefile	/^CC              :=  gcc -Wall -g$/;"	m
CCFLAGS	/home/avinash/mywork/cstl/test/Makefile	/^CCFLAGS         :=  -Wall -g $/;"	m
CLIB_ERROR	/home/avinash/mywork/cstl/inc/c_util.h	/^typedef int CLIB_ERROR;$/;"	t
CLIB_NULL	/home/avinash/mywork/cstl/inc/c_util.h	19;"	d
CLIB_RBTREE_KEY_DUPLICATE	/home/avinash/mywork/cstl/inc/c_util.h	27;"	d
CLIB_RBTREE_KEY_NOT_FOUND	/home/avinash/mywork/cstl/inc/c_util.h	28;"	d
CLIB_SUCCESS	/home/avinash/mywork/cstl/inc/c_util.h	22;"	d
CXX	/home/avinash/mywork/cstl/src/Makefile	/^CXX             :=  gcc$/;"	m
DELETE_ARRAY	/home/avinash/mywork/cstl/test/t_c_array.c	71;"	d	file:
DELETE_ARRAY1	/home/avinash/mywork/cstl/test/t_c_array.c	74;"	d	file:
DEQUE_PTR	/home/avinash/mywork/cstl/inc/c_deque.h	/^typedef c_deque* DEQUE_PTR;$/;"	t
INSERT_ELEMENT	/home/avinash/mywork/cstl/test/t_c_array.c	63;"	d	file:
Inorder	/home/avinash/mywork/cstl/backup/c_tree.h	10;"	d
Inorder	/home/avinash/mywork/cstl/backup/c_tree.h	18;"	d
Inorder	/home/avinash/mywork/cstl/backup/c_tree.h	25;"	d
Insert	/home/avinash/mywork/cstl/backup/c_tree.h	16;"	d
Insert	/home/avinash/mywork/cstl/backup/c_tree.h	23;"	d
Insert	/home/avinash/mywork/cstl/backup/c_tree.h	8;"	d
MAP	/home/avinash/mywork/cstl/inc/c_util.h	14;"	d
MULTI_MAP	/home/avinash/mywork/cstl/inc/c_util.h	15;"	d
MULTI_SET	/home/avinash/mywork/cstl/inc/c_util.h	17;"	d
NewBSTtree	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtree *NewBSTtree(f_comparator f_comp, f_deleteKey f_delK, f_deleteData f_delD, f_printKey f_printK, f_printData f_printD)$/;"	f
PRINT_ELEMENT	/home/avinash/mywork/cstl/test/t_c_array.c	77;"	d	file:
PRINT_TEST_CASE	/home/avinash/mywork/cstl/test/t_c_array.c	87;"	d	file:
P_C_OBJS	/home/avinash/mywork/cstl/src/Makefile	/^P_C_OBJS        :=  ${P_C_SRCS:.c=.o}$/;"	m
P_C_OBJS	/home/avinash/mywork/cstl/test/Makefile	/^P_C_OBJS        :=  ${P_C_SRCS:.c=.o}$/;"	m
P_C_SRCS	/home/avinash/mywork/cstl/src/Makefile	/^P_C_SRCS        :=  $(wildcard *.c)$/;"	m
P_C_SRCS	/home/avinash/mywork/cstl/test/Makefile	/^P_C_SRCS        :=  $(wildcard *.c)$/;"	m
P_INCLUDE_DIRS	/home/avinash/mywork/cstl/src/Makefile	/^P_INCLUDE_DIRS  :=  ..\/inc$/;"	m
P_INCLUDE_DIRS	/home/avinash/mywork/cstl/test/Makefile	/^P_INCLUDE_DIRS  :=  ..\/inc$/;"	m
P_LIBRARIES	/home/avinash/mywork/cstl/test/Makefile	/^P_LIBRARIES     :=  clib$/;"	m
P_LIBRARY_DIRS	/home/avinash/mywork/cstl/test/Makefile	/^P_LIBRARY_DIRS  :=  ..\/src$/;"	m
P_NAME	/home/avinash/mywork/cstl/src/Makefile	/^P_NAME          :=  libclib.a$/;"	m
P_NAME	/home/avinash/mywork/cstl/test/Makefile	/^P_NAME          :=  tstclib$/;"	m
P_OBJS	/home/avinash/mywork/cstl/src/Makefile	/^P_OBJS          :=  $(P_C_OBJS) $/;"	m
RB_INORDER	/home/avinash/mywork/cstl/inc/c_rb.h	36;"	d
RB_NODE_NULL	/home/avinash/mywork/cstl/inc/c_rb.h	19;"	d
RB_NODE_PTR	/home/avinash/mywork/cstl/inc/c_rb.h	/^typedef c_rb_node* RB_NODE_PTR;$/;"	t
RB_POSTORDER	/home/avinash/mywork/cstl/inc/c_rb.h	38;"	d
RB_PREORDER	/home/avinash/mywork/cstl/inc/c_rb.h	37;"	d
RB_PTR	/home/avinash/mywork/cstl/inc/c_rb.h	/^typedef c_rb* RB_PTR;$/;"	t
RB_SENTINEL	/home/avinash/mywork/cstl/src/c_rb.c	8;"	d	file:
RB_SENTINEL	/home/avinash/mywork/cstl/test/t_c_rb.c	10;"	d	file:
RBtree	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^}RBtree;$/;"	t	typeref:struct:rbtree
RBtreeNode	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^}RBtreeNode;$/;"	t	typeref:struct:rbtreeNode
RED	/home/avinash/mywork/cstl/inc/c_util.h	12;"	d
RED	/home/avinash/mywork/cstl/test/t_c_rb.c	8;"	d	file:
Remove	/home/avinash/mywork/cstl/backup/c_tree.h	17;"	d
Remove	/home/avinash/mywork/cstl/backup/c_tree.h	24;"	d
Remove	/home/avinash/mywork/cstl/backup/c_tree.h	9;"	d
SET	/home/avinash/mywork/cstl/inc/c_util.h	16;"	d
SET_NULL	/home/avinash/mywork/cstl/inc/c_set.h	14;"	d
SET_PTR	/home/avinash/mywork/cstl/inc/c_set.h	/^typedef c_set * SET_PTR;$/;"	t
SUBDIRS	/home/avinash/mywork/cstl/Makefile	/^SUBDIRS = src \\$/;"	m
Search	/home/avinash/mywork/cstl/backup/c_tree.h	/^void *Search(tree *t, void *key)$/;"	f
TEST_VALUE	/home/avinash/mywork/cstl/test/t_c_array.c	81;"	d	file:
TS	/home/avinash/mywork/cstl/test/t_c_bst.c	/^} TS;$/;"	t	typeref:struct:test_data_tree	file:
TS	/home/avinash/mywork/cstl/test/t_c_rb.c	/^} TS;$/;"	t	typeref:struct:test_data_tree	file:
TYPE	/home/avinash/mywork/cstl/inc/c_util.h	/^typedef void* TYPE;$/;"	t
VALIDATE_KEY_PTR	/home/avinash/mywork/cstl/src/c_set.c	4;"	d	file:
VALIDATE_SET_PTR	/home/avinash/mywork/cstl/src/c_set.c	3;"	d	file:
_AVLTREE_H_	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	2;"	d
_BSTTREE_H_	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	2;"	d
_C_ARRAY_H_	/home/avinash/mywork/cstl/inc/c_array.h	2;"	d
_C_BST_T_	/home/avinash/mywork/cstl/inc/c_bst.h	2;"	d
_C_DEQUE_H_	/home/avinash/mywork/cstl/inc/c_deque.h	2;"	d
_C_RB_T_	/home/avinash/mywork/cstl/inc/c_rb.h	2;"	d
_C_SET_H_	/home/avinash/mywork/cstl/inc/c_set.h	2;"	d
_C_UTIL_H_	/home/avinash/mywork/cstl/inc/c_util.h	2;"	d
_RBTREE_H_	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	2;"	d
_TREE_H_	/home/avinash/mywork/cstl/backup/c_tree.h	2;"	d
__allocate_tree_node	/home/avinash/mywork/cstl/src/c_bst.c	/^__allocate_tree_node( TYPE key) {$/;"	f	file:
__c_bst_node	/home/avinash/mywork/cstl/inc/c_bst.h	/^typedef struct __c_bst_node {$/;"	s
__c_deque	/home/avinash/mywork/cstl/inc/c_deque.h	/^typedef struct __c_deque {$/;"	s
__c_rb_node	/home/avinash/mywork/cstl/inc/c_rb.h	/^typedef struct __c_rb_node {$/;"	s
__c_set	/home/avinash/mywork/cstl/inc/c_set.h	/^typedef struct __c_set {$/;"	s
__find_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^__find_c_bst ( BST_NODE_PTR node, compare fn_c, TYPE key ) {$/;"	f	file:
__find_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^__find_c_rb ( RB_PTR tree, TYPE k ) {$/;"	f	file:
__find_c_rb	/home/avinash/mywork/cstl/test/t_c_rb.c	/^__find_c_rb ( RB_PTR tree, compare fn_c, TYPE key ) {$/;"	f	file:
__in_order	/home/avinash/mywork/cstl/src/c_bst.c	/^__in_order(BST_NODE_PTR node, traversal fn_t){$/;"	f	file:
__left_rotate	/home/avinash/mywork/cstl/src/c_rb.c	/^__left_rotate(RB_PTR tree, RB_NODE_PTR x){$/;"	f	file:
__post_order	/home/avinash/mywork/cstl/src/c_bst.c	/^__post_order(BST_NODE_PTR node, traversal fn_t){$/;"	f	file:
__pre_order	/home/avinash/mywork/cstl/src/c_bst.c	/^__pre_order(BST_NODE_PTR node, traversal fn_t){$/;"	f	file:
__rb_insert_fixup	/home/avinash/mywork/cstl/src/c_rb.c	/^__rb_insert_fixup( RB_PTR tree, RB_NODE_PTR x ) {$/;"	f	file:
__rb_remove_fixup	/home/avinash/mywork/cstl/src/c_rb.c	/^__rb_remove_fixup( RB_PTR tree, RB_NODE_PTR x ) {$/;"	f	file:
__remove_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^__remove_c_rb(RB_PTR tree, RB_NODE_PTR z ) {$/;"	f	file:
__right_rotate	/home/avinash/mywork/cstl/src/c_rb.c	/^__right_rotate(RB_PTR tree, RB_NODE_PTR x) {$/;"	f	file:
_back_index	/home/avinash/mywork/cstl/inc/c_deque.h	/^    int _back_index;$/;"	m	struct:__c_deque
_c_array	/home/avinash/mywork/cstl/inc/c_array.h	/^typedef struct _c_array {$/;"	s
_c_bst	/home/avinash/mywork/cstl/inc/c_bst.h	/^typedef struct _c_bst {$/;"	s
_c_pair	/home/avinash/mywork/cstl/inc/c_rb.h	/^typedef struct _c_pair {$/;"	s
_c_rb	/home/avinash/mywork/cstl/inc/c_rb.h	/^typedef struct _c_rb {$/;"	s
_current_size	/home/avinash/mywork/cstl/inc/c_deque.h	/^    int _current_size;$/;"	m	struct:__c_deque
_elem	/home/avinash/mywork/cstl/inc/c_array.h	/^    TYPE *_elem;$/;"	m	struct:_c_array
_elements	/home/avinash/mywork/cstl/inc/c_deque.h	/^    TYPE* _elements;$/;"	m	struct:__c_deque
_fn_compare	/home/avinash/mywork/cstl/inc/c_deque.h	/^    compare _fn_compare;$/;"	m	struct:__c_deque
_fn_destroy	/home/avinash/mywork/cstl/inc/c_deque.h	/^    destroy _fn_destroy;$/;"	m	struct:__c_deque
_front_index	/home/avinash/mywork/cstl/inc/c_deque.h	/^    int _front_index;$/;"	m	struct:__c_deque
_key	/home/avinash/mywork/cstl/inc/c_bst.h	/^    TYPE _key;$/;"	m	struct:__c_bst_node
_key	/home/avinash/mywork/cstl/inc/c_rb.h	/^    TYPE _key;$/;"	m	struct:_c_pair
_root	/home/avinash/mywork/cstl/inc/c_bst.h	/^    c_bst_node *_root;$/;"	m	struct:_c_bst
_root	/home/avinash/mywork/cstl/inc/c_rb.h	/^    c_rb_node *_root;$/;"	m	struct:_c_rb
_sentinel	/home/avinash/mywork/cstl/inc/c_rb.h	/^    c_rb_node _sentinel;$/;"	m	struct:_c_rb
_size	/home/avinash/mywork/cstl/inc/c_deque.h	/^    int _size;$/;"	m	struct:__c_deque
_type	/home/avinash/mywork/cstl/inc/c_rb.h	/^    int _type ;$/;"	m	struct:_c_rb
_value	/home/avinash/mywork/cstl/inc/c_rb.h	/^    TYPE _value;$/;"	m	struct:_c_pair
avltree	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef struct avltree$/;"	s
avltreeNode	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef struct avltreeNode$/;"	s
back_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^back_c_array ( ARRAY_PTR   array){$/;"	f
back_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^back_c_deque ( DEQUE_PTR   deq) {$/;"	f
black	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^enum colors {red, black};$/;"	e	enum:colors
bsttree	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef struct bsttree$/;"	s
bsttreeNode	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef struct bsttreeNode$/;"	s
c_array	/home/avinash/mywork/cstl/inc/c_array.h	/^}c_array;$/;"	t	typeref:struct:_c_array
c_bst	/home/avinash/mywork/cstl/inc/c_bst.h	/^}c_bst;$/;"	t	typeref:struct:_c_bst
c_bst_node	/home/avinash/mywork/cstl/inc/c_bst.h	/^}c_bst_node;$/;"	t	typeref:struct:__c_bst_node
c_deque	/home/avinash/mywork/cstl/inc/c_deque.h	/^}c_deque;$/;"	t	typeref:struct:__c_deque
c_free	/home/avinash/mywork/cstl/src/c_util.c	/^c_free ( void *ptr ) {$/;"	f
c_malloc	/home/avinash/mywork/cstl/src/c_util.c	/^c_malloc( int size ) {$/;"	f
c_pair	/home/avinash/mywork/cstl/inc/c_rb.h	/^}c_pair;$/;"	t	typeref:struct:_c_pair
c_rb	/home/avinash/mywork/cstl/inc/c_rb.h	/^}c_rb;$/;"	t	typeref:struct:_c_rb
c_rb_node	/home/avinash/mywork/cstl/inc/c_rb.h	/^}c_rb_node;$/;"	t	typeref:struct:__c_rb_node
c_set	/home/avinash/mywork/cstl/inc/c_set.h	/^}c_set;$/;"	t	typeref:struct:__c_set
capacity	/home/avinash/mywork/cstl/inc/c_array.h	/^    int  capacity;$/;"	m	struct:_c_array
capacity_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^capacity_c_array ( ARRAY_PTR array ) {$/;"	f
color	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    enum colors color;$/;"	m	struct:rbtreeNode	typeref:enum:rbtreeNode::colors
color	/home/avinash/mywork/cstl/inc/c_rb.h	/^    int color; $/;"	m	struct:__c_rb_node
color	/home/avinash/mywork/cstl/test/t_c_rb.c	/^	int color;$/;"	m	struct:test_data_tree	file:
colors	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^enum colors {red, black};$/;"	g
comp	/home/avinash/mywork/cstl/backup/t_c_tree.c	/^int comp(void *a, void *b)$/;"	f
comparator	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    f_comparator comparator;$/;"	m	struct:avltree
comparator	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    f_comparator comparator;$/;"	m	struct:bsttree
comparator	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    f_comparator comparator;$/;"	m	struct:rbtree
compare	/home/avinash/mywork/cstl/inc/c_util.h	/^typedef int  (*compare)(TYPE,TYPE);$/;"	t
compare_e	/home/avinash/mywork/cstl/test/t_c_bst.c	/^static int compare_e ( void* l, void *r ) {$/;"	f	file:
compare_e	/home/avinash/mywork/cstl/test/t_c_rb.c	/^static int compare_e ( void* l, void *r ) {$/;"	f	file:
compare_element	/home/avinash/mywork/cstl/test/t_c_array.c	/^compare_element ( void *left, void *right ) {$/;"	f	file:
compare_element	/home/avinash/mywork/cstl/test/t_c_deque.c	/^compare_element ( void *left, void *right ) {$/;"	f	file:
compare_element1	/home/avinash/mywork/cstl/test/t_c_array.c	/^compare_element1 ( void *left, void *right ) {$/;"	f	file:
compare_fn	/home/avinash/mywork/cstl/inc/c_array.h	/^    compare compare_fn;$/;"	m	struct:_c_array
compare_fn	/home/avinash/mywork/cstl/inc/c_bst.h	/^    compare compare_fn;$/;"	m	struct:_c_bst
compare_fn	/home/avinash/mywork/cstl/inc/c_rb.h	/^    compare compare_fn;$/;"	m	struct:_c_rb
create_tree	/home/avinash/mywork/cstl/test/t_c_bst.c	/^create_tree(TS ts[], int size) {$/;"	f	file:
create_tree	/home/avinash/mywork/cstl/test/t_c_rb.c	/^create_tree(TS ts[], int size) {$/;"	f	file:
cur_size	/home/avinash/mywork/cstl/inc/c_array.h	/^    int  cur_size;$/;"	m	struct:_c_array
data	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    void *data;$/;"	m	struct:avltreeNode
data	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    void *data;$/;"	m	struct:bsttreeNode
data	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    void *data;$/;"	m	struct:rbtreeNode
deleteData	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    f_deleteData deleteData;$/;"	m	struct:avltree
deleteData	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    f_deleteData deleteData;$/;"	m	struct:bsttree
deleteData	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    f_deleteData deleteData;$/;"	m	struct:rbtree
deleteKey	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    f_deleteKey deleteKey;$/;"	m	struct:avltree
deleteKey	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    f_deleteKey deleteKey;$/;"	m	struct:bsttree
deleteKey	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    f_deleteKey deleteKey;$/;"	m	struct:rbtree
delete_all_node	/home/avinash/mywork/cstl/src/c_bst.c	/^delete_all_node ( BST_NODE_PTR node, destroy fn_d) {$/;"	f	file:
delete_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^delete_c_array( ARRAY_PTR array) {$/;"	f
delete_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^delete_c_bst(BST_PTR tree, TYPE key ){$/;"	f
delete_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^delete_c_deque ( DEQUE_PTR deq ) {$/;"	f
delete_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^delete_c_rb(RB_PTR tree) {$/;"	f
delete_c_set	/home/avinash/mywork/cstl/src/c_set.c	/^delete_c_set ( SET_PTR x) {$/;"	f
destroy	/home/avinash/mywork/cstl/inc/c_util.h	/^typedef void (*destroy)(TYPE);$/;"	t
destroy_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^destroy_c_bst(BST_PTR tree){$/;"	f
destroy_fn	/home/avinash/mywork/cstl/inc/c_bst.h	/^    destroy destroy_fn;$/;"	m	struct:_c_bst
destroy_fn	/home/avinash/mywork/cstl/inc/c_rb.h	/^    destroy destroy_fn;$/;"	m	struct:_c_rb
destruct_fn	/home/avinash/mywork/cstl/inc/c_array.h	/^    destroy destruct_fn;$/;"	m	struct:_c_array
element	/home/avinash/mywork/cstl/test/t_c_bst.c	/^    int element;$/;"	m	struct:test_data_tree	file:
element	/home/avinash/mywork/cstl/test/t_c_rb.c	/^	int element;$/;"	m	struct:test_data_tree	file:
element_at_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^element_at_c_array ( ARRAY_PTR array, int pos ) {$/;"	f
empty_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^empty_c_array ( ARRAY_PTR  array ) {$/;"	f
empty_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^empty_c_deque( DEQUE_PTR deq){$/;"	f
exists_c_set	/home/avinash/mywork/cstl/src/c_set.c	/^exists_c_set( SET_PTR x, TYPE k ) {$/;"	f
f_comparator	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef int (* f_comparator)(void *, void *);$/;"	t
f_comparator	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef int (* f_comparator)(void *, void *);$/;"	t
f_comparator	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef int (* f_comparator)(void *, void *);$/;"	t
f_deleteData	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef int (* f_deleteData)(void *);$/;"	t
f_deleteData	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef int (* f_deleteData)(void *);$/;"	t
f_deleteData	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef int (* f_deleteData)(void *);$/;"	t
f_deleteKey	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef int (* f_deleteKey)(void *);$/;"	t
f_deleteKey	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef int (* f_deleteKey)(void *);$/;"	t
f_deleteKey	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef int (* f_deleteKey)(void *);$/;"	t
f_printData	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef void (* f_printData)(void *);$/;"	t
f_printData	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef void (* f_printData)(void *);$/;"	t
f_printData	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef void (* f_printData)(void *);$/;"	t
f_printKey	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^typedef void (* f_printKey)(void *);$/;"	t
f_printKey	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^typedef void (* f_printKey)(void *);$/;"	t
f_printKey	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef void (* f_printKey)(void *);$/;"	t
find	/home/avinash/mywork/cstl/test/t_c_rb.c	/^find(RB_PTR tree, TYPE key ) {$/;"	f
findLeftMostNode	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode *findLeftMostNode(BSTtreeNode *node)$/;"	f
findRightMostNode	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode *findRightMostNode(BSTtreeNode *node)$/;"	f
find_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^find_c_bst(BST_PTR tree, TYPE key ) {$/;"	f
find_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^find_c_rb(RB_PTR tree, TYPE key ) {$/;"	f
fn_compare	/home/avinash/mywork/cstl/inc/c_set.h	/^    compare fn_compare;$/;"	m	struct:__c_set
fn_destroy	/home/avinash/mywork/cstl/inc/c_set.h	/^    destroy fn_destroy;$/;"	m	struct:__c_set
for_each_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^for_each_c_array(ARRAY_PTR   array, void (*fn)(void*)) {$/;"	f
for_each_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^for_each_c_deque(DEQUE_PTR   deq, void (*fn)(void*)) {$/;"	f
free_e	/home/avinash/mywork/cstl/test/t_c_bst.c	/^static void free_e ( void *p ) {$/;"	f	file:
free_e	/home/avinash/mywork/cstl/test/t_c_rb.c	/^static void free_e ( void *p ) {$/;"	f	file:
free_element	/home/avinash/mywork/cstl/test/t_c_array.c	/^free_element ( void *ptr ) {$/;"	f	file:
free_element	/home/avinash/mywork/cstl/test/t_c_deque.c	/^free_element ( void *ptr ) {$/;"	f	file:
front_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^front_c_array ( ARRAY_PTR   array) {$/;"	f
front_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^front_c_deque ( DEQUE_PTR   deq) {$/;"	f
function_for_each	/home/avinash/mywork/cstl/test/t_c_array.c	/^function_for_each ( void *ptr ) {$/;"	f	file:
genericComp	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int genericComp(void *one, void *two)$/;"	f
getGrandpa	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode *getGrandpa(BSTtreeNode *node)$/;"	f
getNewBSTtreeNode	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode * getNewBSTtreeNode(void *ikey, void *idata)$/;"	f
getParent	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode *getParent(BSTtreeNode *node)$/;"	f
getUncle	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^BSTtreeNode *getUncle(BSTtreeNode *node)$/;"	f
get_key	/home/avinash/mywork/cstl/test/t_c_bst.c	/^get_key (  BST_NODE_PTR node) {$/;"	f	file:
get_key	/home/avinash/mywork/cstl/test/t_c_rb.c	/^get_key ( RB_PTR tree, RB_NODE_PTR node) {$/;"	f	file:
get_left	/home/avinash/mywork/cstl/test/t_c_bst.c	/^get_left (BST_NODE_PTR node ) {$/;"	f	file:
get_left	/home/avinash/mywork/cstl/test/t_c_rb.c	/^get_left (RB_PTR tree, RB_NODE_PTR node ) {$/;"	f	file:
get_parent	/home/avinash/mywork/cstl/test/t_c_bst.c	/^get_parent (BST_NODE_PTR node ) {$/;"	f	file:
get_parent	/home/avinash/mywork/cstl/test/t_c_rb.c	/^get_parent ( RB_PTR tree,RB_NODE_PTR node ) {$/;"	f	file:
get_right	/home/avinash/mywork/cstl/test/t_c_bst.c	/^get_right (BST_NODE_PTR node ){$/;"	f	file:
get_right	/home/avinash/mywork/cstl/test/t_c_rb.c	/^get_right (RB_PTR tree, RB_NODE_PTR node ){$/;"	f	file:
height	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    unsigned int height[2];$/;"	m	struct:avltreeNode
i	/home/avinash/mywork/cstl/test/t_c_array.c	/^int i = 0;$/;"	v
insert_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^insert_c_array ( ARRAY_PTR   array, int pos, TYPE value) {$/;"	f
insert_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^insert_c_bst(BST_PTR tree, TYPE key ) {$/;"	f
insert_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^insert_c_rb(RB_PTR tree, TYPE key , TYPE value) {$/;"	f
insert_c_set	/home/avinash/mywork/cstl/src/c_set.c	/^insert_c_set ( SET_PTR x, TYPE k) {$/;"	f
isLeftChild	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int isLeftChild(BSTtreeNode *node)$/;"	f
is_equal_to_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^is_equal_to_c_array ( ARRAY_PTR arrL, ARRAY_PTR  arrR) {$/;"	f
key	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    void *key;$/;"	m	struct:avltreeNode
key	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    void *key;$/;"	m	struct:bsttreeNode
key	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    void *key;$/;"	m	struct:rbtreeNode
left	/home/avinash/mywork/cstl/inc/c_bst.h	/^    struct __c_bst_node *left;$/;"	m	struct:__c_bst_node	typeref:struct:__c_bst_node::__c_bst_node
left	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    struct avltreeNode *left;$/;"	m	struct:avltreeNode	typeref:struct:avltreeNode::avltreeNode
left	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    struct bsttreeNode *left;$/;"	m	struct:bsttreeNode	typeref:struct:bsttreeNode::bsttreeNode
left	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    struct rbtreeNode *left;$/;"	m	struct:rbtreeNode	typeref:struct:rbtreeNode::rbtreeNode
left	/home/avinash/mywork/cstl/inc/c_rb.h	/^    struct __c_rb_node *left;$/;"	m	struct:__c_rb_node	typeref:struct:__c_rb_node::__c_rb_node
left	/home/avinash/mywork/cstl/test/t_c_bst.c	/^    int left;$/;"	m	struct:test_data_tree	file:
left	/home/avinash/mywork/cstl/test/t_c_rb.c	/^	int left;$/;"	m	struct:test_data_tree	file:
main	/home/avinash/mywork/cstl/test/t_clib.c	/^int main( int argc, char**argv ) {	$/;"	f
minimum_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^minimum_c_bst(BST_NODE_PTR node) {$/;"	f	file:
newTree	/home/avinash/mywork/cstl/backup/c_tree.h	15;"	d
newTree	/home/avinash/mywork/cstl/backup/c_tree.h	22;"	d
newTree	/home/avinash/mywork/cstl/backup/c_tree.h	7;"	d
new_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^new_c_array( int size, destroy fn_destroy, compare fn_compare) {$/;"	f
new_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^new_c_bst(destroy fn_d, compare fn_c, traversal fn_t){$/;"	f
new_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^new_c_deque(int size , destroy fn_destroy, compare fn_compare) {$/;"	f
new_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^new_c_rb(destroy fn_d, compare fn_c, int type){$/;"	f
new_c_set	/home/avinash/mywork/cstl/src/c_set.c	/^new_c_set( destroy fn_d, compare fn_c) {$/;"	f
parent	/home/avinash/mywork/cstl/inc/c_bst.h	/^    struct __c_bst_node *parent;$/;"	m	struct:__c_bst_node	typeref:struct:__c_bst_node::__c_bst_node
parent	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    struct avltreeNode *parent;$/;"	m	struct:avltreeNode	typeref:struct:avltreeNode::avltreeNode
parent	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    struct bsttreeNode *parent;$/;"	m	struct:bsttreeNode	typeref:struct:bsttreeNode::bsttreeNode
parent	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    struct rbtreeNode *parent;$/;"	m	struct:rbtreeNode	typeref:struct:rbtreeNode::rbtreeNode
parent	/home/avinash/mywork/cstl/inc/c_rb.h	/^    struct __c_rb_node *parent;$/;"	m	struct:__c_rb_node	typeref:struct:__c_rb_node::__c_rb_node
parent	/home/avinash/mywork/cstl/test/t_c_bst.c	/^    int parent;$/;"	m	struct:test_data_tree	file:
parent	/home/avinash/mywork/cstl/test/t_c_rb.c	/^	int parent;$/;"	m	struct:test_data_tree	file:
pop_back_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^pop_back_c_array ( ARRAY_PTR array ) {$/;"	f
pop_back_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^pop_back_c_deque ( DEQUE_PTR   deq ) {$/;"	f
pop_front_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^pop_front_c_deque ( DEQUE_PTR   deq ) {$/;"	f
printData	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    f_printData printData;$/;"	m	struct:avltree
printData	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    f_printData printData;$/;"	m	struct:bsttree
printData	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    f_printData printData;$/;"	m	struct:rbtree
printKey	/home/avinash/mywork/cstl/backup/t_c_tree.c	/^void printKey(void *in)$/;"	f
printKey	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    f_printKey printKey;$/;"	m	struct:avltree
printKey	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    f_printKey printKey;$/;"	m	struct:bsttree
printKey	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    f_printKey printKey;$/;"	m	struct:rbtree
print_elements	/home/avinash/mywork/cstl/test/t_c_deque.c	/^print_elements ( void *ptr ) {$/;"	f	file:
push_back_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^push_back_c_array ( ARRAY_PTR array, TYPE value ) {$/;"	f
push_back_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^push_back_c_deque(DEQUE_PTR   deq, void* value) {$/;"	f
push_front_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^push_front_c_deque(DEQUE_PTR   deq, void* value) {$/;"	f
rbtree	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef struct rbtree$/;"	s
rbtreeNode	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^typedef struct rbtreeNode$/;"	s
red	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^enum colors {red, black};$/;"	e	enum:colors
remove_c_rb	/home/avinash/mywork/cstl/src/c_rb.c	/^remove_c_rb ( RB_PTR tree, TYPE key ) {$/;"	f
remove_c_set	/home/avinash/mywork/cstl/src/c_set.c	/^remove_c_set ( SET_PTR x, TYPE k ) {$/;"	f
removed	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    int removed;$/;"	m	struct:bsttreeNode
reserve_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^reserve_c_array ( ARRAY_PTR array , int size) {$/;"	f
right	/home/avinash/mywork/cstl/inc/c_bst.h	/^    struct __c_bst_node *right;$/;"	m	struct:__c_bst_node	typeref:struct:__c_bst_node::__c_bst_node
right	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    struct avltreeNode *right;$/;"	m	struct:avltreeNode	typeref:struct:avltreeNode::avltreeNode
right	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    struct bsttreeNode *right;$/;"	m	struct:bsttreeNode	typeref:struct:bsttreeNode::bsttreeNode
right	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    struct rbtreeNode *right;$/;"	m	struct:rbtreeNode	typeref:struct:rbtreeNode::rbtreeNode
right	/home/avinash/mywork/cstl/inc/c_rb.h	/^    struct __c_rb_node *right;$/;"	m	struct:__c_rb_node	typeref:struct:__c_rb_node::__c_rb_node
right	/home/avinash/mywork/cstl/test/t_c_bst.c	/^    int right;$/;"	m	struct:test_data_tree	file:
right	/home/avinash/mywork/cstl/test/t_c_rb.c	/^	int right;$/;"	m	struct:test_data_tree	file:
root	/home/avinash/mywork/cstl/inc/c_priv_avltree.h	/^    struct avltreeNode *root;$/;"	m	struct:avltree	typeref:struct:avltree::avltreeNode
root	/home/avinash/mywork/cstl/inc/c_priv_bsttree.h	/^    struct bsttreeNode *root;$/;"	m	struct:bsttree	typeref:struct:bsttree::bsttreeNode
root	/home/avinash/mywork/cstl/inc/c_priv_rbtree.h	/^    struct rbtreeNode *root;$/;"	m	struct:rbtree	typeref:struct:rbtree::rbtreeNode
root	/home/avinash/mywork/cstl/inc/c_set.h	/^    RB_PTR root;$/;"	m	struct:__c_set
size_c_array	/home/avinash/mywork/cstl/src/c_array.c	/^size_c_array ( ARRAY_PTR  array ){$/;"	f
size_c_deque	/home/avinash/mywork/cstl/src/c_deque.c	/^size_c_deque( DEQUE_PTR deq ) {$/;"	f
successor_c_bst	/home/avinash/mywork/cstl/src/c_bst.c	/^successor_c_bst(BST_NODE_PTR node ) {$/;"	f	file:
t_back_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_back_c_array() {$/;"	f
t_capacity_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_capacity_c_array() {$/;"	f
t_element_at_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_element_at_c_array() {$/;"	f
t_empty_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_empty_c_array(){$/;"	f
t_for_each_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_for_each_c_array() {$/;"	f
t_front_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_front_c_array() {$/;"	f
t_insert_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_insert_c_array(){$/;"	f
t_is_equal_to_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_is_equal_to_c_array() {$/;"	f
t_pop_back_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_pop_back_c_array() {$/;"	f
t_push_back_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_push_back_c_array() {$/;"	f
t_reserve_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_reserve_c_array() {$/;"	f
t_size_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^t_size_c_array(){$/;"	f
test_all_elements	/home/avinash/mywork/cstl/test/t_c_bst.c	/^test_all_elements(BST_PTR tree, TS ts[], int size) {$/;"	f	file:
test_all_elements	/home/avinash/mywork/cstl/test/t_c_rb.c	/^test_all_elements(RB_PTR tree, TS ts[], int size) {$/;"	f	file:
test_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^ARRAY_PTR  test_array;$/;"	v
test_array1	/home/avinash/mywork/cstl/test/t_c_array.c	/^ARRAY_PTR  test_array1;$/;"	v
test_c_array	/home/avinash/mywork/cstl/test/t_c_array.c	/^test_c_array(){$/;"	f
test_c_bst	/home/avinash/mywork/cstl/test/t_c_bst.c	/^test_c_bst() {$/;"	f
test_c_deque	/home/avinash/mywork/cstl/test/t_c_deque.c	/^test_c_deque(int value) {$/;"	f
test_c_rb	/home/avinash/mywork/cstl/test/t_c_rb.c	/^test_c_rb() {$/;"	f
test_c_set	/home/avinash/mywork/cstl/test/t_c_set.c	/^test_c_set(){$/;"	f
test_c_tree	/home/avinash/mywork/cstl/backup/t_c_tree.c	/^void test_c_tree()$/;"	f
test_data_tree	/home/avinash/mywork/cstl/test/t_c_bst.c	/^typedef struct test_data_tree {$/;"	s	file:
test_data_tree	/home/avinash/mywork/cstl/test/t_c_rb.c	/^typedef struct test_data_tree {$/;"	s	file:
test_deq	/home/avinash/mywork/cstl/test/t_c_deque.c	/^c_deque *test_deq;$/;"	v
test_each_elements	/home/avinash/mywork/cstl/test/t_c_bst.c	/^test_each_elements(int l,int r, int p, int e,BST_NODE_PTR v, TS ts[], int i) {$/;"	f	file:
test_each_elements	/home/avinash/mywork/cstl/test/t_c_rb.c	/^test_each_elements(int l,int r, int p, int e,TYPE v, TS ts[], int i, RB_PTR tree) {$/;"	f	file:
traversal	/home/avinash/mywork/cstl/inc/c_util.h	/^typedef void (*traversal)( TYPE);$/;"	t
traversal_e	/home/avinash/mywork/cstl/test/t_c_bst.c	/^static void traversal_e ( void *p ) {$/;"	f	file:
traversal_fn	/home/avinash/mywork/cstl/inc/c_bst.h	/^    traversal traversal_fn;$/;"	m	struct:_c_bst
traverseInorder	/home/avinash/mywork/cstl/backup/c_bsttree.c	/^int traverseInorder(BSTtreeNode *root, f_printKey printKey)$/;"	f
tree	/home/avinash/mywork/cstl/backup/c_tree.h	14;"	d
tree	/home/avinash/mywork/cstl/backup/c_tree.h	21;"	d
tree	/home/avinash/mywork/cstl/backup/c_tree.h	5;"	d
treeNode	/home/avinash/mywork/cstl/backup/c_tree.h	6;"	d
update_values	/home/avinash/mywork/cstl/test/t_c_bst.c	/^static void update_values ( BST_NODE_PTR v, int *l, int *r, int *p , int *e ) {$/;"	f	file:
update_values	/home/avinash/mywork/cstl/test/t_c_rb.c	/^static void update_values ( TYPE v, int *l, int *r, int *p , int *e, RB_PTR tree ) {$/;"	f	file:
value	/home/avinash/mywork/cstl/inc/c_rb.h	/^    c_pair value;$/;"	m	struct:__c_rb_node
walk_c_bst_r	/home/avinash/mywork/cstl/src/c_bst.c	/^walk_c_bst_r(BST_PTR tree, int type){$/;"	f
